import csv
import numpy as np
import imageio
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

def read_CV(file, cycle,ref):
    cycle=cycle-1
    file_as_text = []
    with open(file, newline='') as csvfile:
         spamreader = csv.reader(csvfile, delimiter='\t', quotechar='|')
         for row in spamreader:
            file_as_text.extend([row])


    header = []
    for row in file_as_text:
        if 'CURVE' not in row[0]:
            header.extend([row]) #tells us the indices of rows before CURVE
        else:
            break

    curve_data_raw = []
    curve_data_IV = []
    indicies = []
    time=[]
    V=[]
    I=[]
    numcyc=0

    for row in file_as_text[len(header)::]: #:: means start:stop:step minus the stop
    #start at line with CURVE and stop whenever we are done
    # string[::2] reads “default start index, default stop index, step size is two—take every second element”.
        i = -1
        if 'CURVE' in row[0]:
            j = 0 #row
            i+=1 #i=0 for CURVE row, i means column index #this is just a counting variable for rows in the empty array
            curve_data_raw.extend([[]]) #make empty arrays
            curve_data_IV.extend([[]])
            numcyc+=1
        else:
            j += 1 #j=1 for headers line
            curve_data_raw[i].extend([row]) #in each column slot in a row, add index  of stuff in matrix
            if j > 2:#this is the data
                curve_data_IV[i].extend([[float(val) for val in row[1:5]]])
            #    [cycle][row][index]
        numcyc=numcyc
    curve_data = [np.array(data).transpose() for data in curve_data_IV]
    #print(len(curve_data[0::][0]))

    #want to only look at 220
    if cycle <= 0:
        for q in range(len(curve_data[0::])-1):
            indicies.append(curve_data[q][0])
            time.append(curve_data[q][1])
            V.append(curve_data[q][2]-ref)#account for reference electrode voltage
            I.append(curve_data[q][3])
    else:
        indicies= curve_data[cycle][0]
        time= curve_data[cycle][1]-ref
        V= curve_data[cycle][2]
        I= curve_data[cycle][3]

    return indicies, time, V, I,numcyc
